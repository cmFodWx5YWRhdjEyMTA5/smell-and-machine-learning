// isComment
package de.qspool.clementineremote.backend.pb;

public final class isClassOrIsInterface {

    private isConstructor() {
    }

    public static void isMethod(com.google.protobuf.ExtensionRegistry isParameter) {
    }

    /**
     * isComment
     */
    public enum MsgType implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * isComment
         */
        UNKNOWN(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        CONNECT(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        REQUEST_PLAYLISTS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        REQUEST_PLAYLIST_SONGS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        CHANGE_SONG(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        SET_VOLUME(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        SET_TRACK_POSITION(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        INSERT_URLS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        REMOVE_SONGS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        OPEN_PLAYLIST(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        CLOSE_PLAYLIST(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        GET_LYRICS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        DOWNLOAD_SONGS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        SONG_OFFER_RESPONSE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        LOVE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        BAN(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        STOP_AFTER(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        GET_LIBRARY(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        RATE_SONG(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        GLOBAL_SEARCH(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        DISCONNECT(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        PLAY(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        PLAYPAUSE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        PAUSE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        STOP(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        NEXT(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        PREVIOUS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        SHUFFLE_PLAYLIST(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        REPEAT(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        SHUFFLE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        INFO(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        CURRENT_METAINFO(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        PLAYLISTS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        PLAYLIST_SONGS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        ENGINE_STATE_CHANGED(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        KEEP_ALIVE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        UPDATE_TRACK_POSITION(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        ACTIVE_PLAYLIST_CHANGED(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        FIRST_DATA_SENT_COMPLETE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        LYRICS(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        SONG_FILE_CHUNK(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        DOWNLOAD_QUEUE_EMPTY(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        LIBRARY_CHUNK(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        DOWNLOAD_TOTAL_SIZE(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        GLOBAL_SEARCH_RESULT(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        TRANSCODING_FILES(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        GLOBAL_SEARCH_STATUS(isIntegerConstant, isIntegerConstant);

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        public final int isMethod() {
            return isNameExpr;
        }

        public static MsgType isMethod(int isParameter) {
            switch(isNameExpr) {
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<MsgType> isMethod() {
            return isNameExpr;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<MsgType> isVariable = new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {

            public MsgType isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
            return isMethod().isMethod().isMethod(isNameExpr);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isMethod();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
        }

        private static final MsgType[] isVariable = isMethod();

        public static MsgType isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
            if (isNameExpr.isMethod() != isMethod()) {
                throw new java.lang.IllegalArgumentException("isStringConstant");
            }
            return isNameExpr[isNameExpr.isMethod()];
        }

        private final int isVariable;

        private final int isVariable;

        private isConstructor(int isParameter, int isParameter) {
            this.isFieldAccessExpr = isNameExpr;
            this.isFieldAccessExpr = isNameExpr;
        }
    }

    /**
     * isComment
     */
    public enum EngineState implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * isComment
         */
        Empty(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Idle(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Playing(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Paused(isIntegerConstant, isIntegerConstant);

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        public final int isMethod() {
            return isNameExpr;
        }

        public static EngineState isMethod(int isParameter) {
            switch(isNameExpr) {
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<EngineState> isMethod() {
            return isNameExpr;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<EngineState> isVariable = new com.google.protobuf.Internal.EnumLiteMap<EngineState>() {

            public EngineState isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
            return isMethod().isMethod().isMethod(isNameExpr);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isMethod();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
        }

        private static final EngineState[] isVariable = isMethod();

        public static EngineState isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
            if (isNameExpr.isMethod() != isMethod()) {
                throw new java.lang.IllegalArgumentException("isStringConstant");
            }
            return isNameExpr[isNameExpr.isMethod()];
        }

        private final int isVariable;

        private final int isVariable;

        private isConstructor(int isParameter, int isParameter) {
            this.isFieldAccessExpr = isNameExpr;
            this.isFieldAccessExpr = isNameExpr;
        }
    }

    /**
     * isComment
     */
    public enum RepeatMode implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * isComment
         */
        Repeat_Off(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Repeat_Track(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Repeat_Album(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Repeat_Playlist(isIntegerConstant, isIntegerConstant);

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        public final int isMethod() {
            return isNameExpr;
        }

        public static RepeatMode isMethod(int isParameter) {
            switch(isNameExpr) {
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<RepeatMode> isMethod() {
            return isNameExpr;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<RepeatMode> isVariable = new com.google.protobuf.Internal.EnumLiteMap<RepeatMode>() {

            public RepeatMode isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
            return isMethod().isMethod().isMethod(isNameExpr);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isMethod();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
        }

        private static final RepeatMode[] isVariable = isMethod();

        public static RepeatMode isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
            if (isNameExpr.isMethod() != isMethod()) {
                throw new java.lang.IllegalArgumentException("isStringConstant");
            }
            return isNameExpr[isNameExpr.isMethod()];
        }

        private final int isVariable;

        private final int isVariable;

        private isConstructor(int isParameter, int isParameter) {
            this.isFieldAccessExpr = isNameExpr;
            this.isFieldAccessExpr = isNameExpr;
        }
    }

    /**
     * isComment
     */
    public enum ShuffleMode implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * isComment
         */
        Shuffle_Off(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Shuffle_All(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Shuffle_InsideAlbum(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Shuffle_Albums(isIntegerConstant, isIntegerConstant);

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        public final int isMethod() {
            return isNameExpr;
        }

        public static ShuffleMode isMethod(int isParameter) {
            switch(isNameExpr) {
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ShuffleMode> isMethod() {
            return isNameExpr;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<ShuffleMode> isVariable = new com.google.protobuf.Internal.EnumLiteMap<ShuffleMode>() {

            public ShuffleMode isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
            return isMethod().isMethod().isMethod(isNameExpr);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isMethod();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
        }

        private static final ShuffleMode[] isVariable = isMethod();

        public static ShuffleMode isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
            if (isNameExpr.isMethod() != isMethod()) {
                throw new java.lang.IllegalArgumentException("isStringConstant");
            }
            return isNameExpr[isNameExpr.isMethod()];
        }

        private final int isVariable;

        private final int isVariable;

        private isConstructor(int isParameter, int isParameter) {
            this.isFieldAccessExpr = isNameExpr;
            this.isFieldAccessExpr = isNameExpr;
        }
    }

    /**
     * isComment
     */
    public enum ReasonDisconnect implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * isComment
         */
        Server_Shutdown(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Wrong_Auth_Code(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Not_Authenticated(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Download_Forbidden(isIntegerConstant, isIntegerConstant);

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        public final int isMethod() {
            return isNameExpr;
        }

        public static ReasonDisconnect isMethod(int isParameter) {
            switch(isNameExpr) {
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ReasonDisconnect> isMethod() {
            return isNameExpr;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<ReasonDisconnect> isVariable = new com.google.protobuf.Internal.EnumLiteMap<ReasonDisconnect>() {

            public ReasonDisconnect isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
            return isMethod().isMethod().isMethod(isNameExpr);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isMethod();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
        }

        private static final ReasonDisconnect[] isVariable = isMethod();

        public static ReasonDisconnect isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
            if (isNameExpr.isMethod() != isMethod()) {
                throw new java.lang.IllegalArgumentException("isStringConstant");
            }
            return isNameExpr[isNameExpr.isMethod()];
        }

        private final int isVariable;

        private final int isVariable;

        private isConstructor(int isParameter, int isParameter) {
            this.isFieldAccessExpr = isNameExpr;
            this.isFieldAccessExpr = isNameExpr;
        }
    }

    /**
     * isComment
     */
    public enum DownloadItem implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * isComment
         */
        CurrentItem(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        ItemAlbum(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        APlaylist(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        Urls(isIntegerConstant, isIntegerConstant);

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        public final int isMethod() {
            return isNameExpr;
        }

        public static DownloadItem isMethod(int isParameter) {
            switch(isNameExpr) {
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DownloadItem> isMethod() {
            return isNameExpr;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<DownloadItem> isVariable = new com.google.protobuf.Internal.EnumLiteMap<DownloadItem>() {

            public DownloadItem isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
            return isMethod().isMethod().isMethod(isNameExpr);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isMethod();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
        }

        private static final DownloadItem[] isVariable = isMethod();

        public static DownloadItem isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
            if (isNameExpr.isMethod() != isMethod()) {
                throw new java.lang.IllegalArgumentException("isStringConstant");
            }
            return isNameExpr[isNameExpr.isMethod()];
        }

        private final int isVariable;

        private final int isVariable;

        private isConstructor(int isParameter, int isParameter) {
            this.isFieldAccessExpr = isNameExpr;
            this.isFieldAccessExpr = isNameExpr;
        }
    }

    /**
     * isComment
     */
    public enum GlobalSearchStatus implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * isComment
         */
        GlobalSearchStarted(isIntegerConstant, isIntegerConstant),
        /**
         * isComment
         */
        GlobalSearchFinished(isIntegerConstant, isIntegerConstant);

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        /**
         * isComment
         */
        public static final int isVariable = isIntegerConstant;

        public final int isMethod() {
            return isNameExpr;
        }

        public static GlobalSearchStatus isMethod(int isParameter) {
            switch(isNameExpr) {
                case isIntegerConstant:
                    return isNameExpr;
                case isIntegerConstant:
                    return isNameExpr;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<GlobalSearchStatus> isMethod() {
            return isNameExpr;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<GlobalSearchStatus> isVariable = new com.google.protobuf.Internal.EnumLiteMap<GlobalSearchStatus>() {

            public GlobalSearchStatus isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
            return isMethod().isMethod().isMethod(isNameExpr);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isMethod();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
        }

        private static final GlobalSearchStatus[] isVariable = isMethod();

        public static GlobalSearchStatus isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
            if (isNameExpr.isMethod() != isMethod()) {
                throw new java.lang.IllegalArgumentException("isStringConstant");
            }
            return isNameExpr[isNameExpr.isMethod()];
        }

        private final int isVariable;

        private final int isVariable;

        private isConstructor(int isParameter, int isParameter) {
            this.isFieldAccessExpr = isNameExpr;
            this.isFieldAccessExpr = isNameExpr;
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        float isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Type isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements SongMetadataOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final SongMetadata isVariable;

        public static SongMetadata isMethod() {
            return isNameExpr;
        }

        public SongMetadata isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Type isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder.class);
        }

        public static com.google.protobuf.Parser<SongMetadata> isVariable = new com.google.protobuf.AbstractParser<SongMetadata>() {

            public SongMetadata isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new SongMetadata(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<SongMetadata> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public enum Type implements com.google.protobuf.ProtocolMessageEnum {

            /**
             * isComment
             */
            UNKNOWN(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            ASF(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            FLAC(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            MP4(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            MPC(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            MPEG(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            OGGFLAC(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            OGGSPEEX(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            OGGVORBIS(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            AIFF(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            WAV(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            TRUEAUDIO(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            CDDA(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            OGGOPUS(isIntegerConstant, isIntegerConstant),
            /**
             * isComment
             */
            STREAM(isIntegerConstant, isIntegerConstant);

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public static final int isVariable = isIntegerConstant;

            public final int isMethod() {
                return isNameExpr;
            }

            public static Type isMethod(int isParameter) {
                switch(isNameExpr) {
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    case isIntegerConstant:
                        return isNameExpr;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Type> isMethod() {
                return isNameExpr;
            }

            private static com.google.protobuf.Internal.EnumLiteMap<Type> isVariable = new com.google.protobuf.Internal.EnumLiteMap<Type>() {

                public Type isMethod(int isParameter) {
                    return isNameExpr.isMethod(isNameExpr);
                }
            };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor isMethod() {
                return isMethod().isMethod().isMethod(isNameExpr);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
                return isMethod();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod().isMethod().isMethod(isIntegerConstant);
            }

            private static final Type[] isVariable = isMethod();

            public static Type isMethod(com.google.protobuf.Descriptors.EnumValueDescriptor isParameter) {
                if (isNameExpr.isMethod() != isMethod()) {
                    throw new java.lang.IllegalArgumentException("isStringConstant");
                }
                return isNameExpr[isNameExpr.isMethod()];
            }

            private final int isVariable;

            private final int isVariable;

            private isConstructor(int isParameter, int isParameter) {
                this.isFieldAccessExpr = isNameExpr;
                this.isFieldAccessExpr = isNameExpr;
            }
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.ByteString isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private float isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public float isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Type isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Type isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = isIntegerConstant;
            isNameExpr = "isStringConstant";
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            isNameExpr = isIntegerConstant;
            isNameExpr = true;
            isNameExpr = "isStringConstant";
            isNameExpr = isIntegerConstant;
            isNameExpr = isDoubleConstant;
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isDoubleConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private float isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public float isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(float isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isDoubleConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Type isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Type isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Type isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new SongMetadata(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements PlaylistOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final Playlist isVariable;

        public static Playlist isMethod() {
            return isNameExpr;
        }

        public Playlist isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder.class);
        }

        public static com.google.protobuf.Parser<Playlist> isVariable = new com.google.protobuf.AbstractParser<Playlist>() {

            public Playlist isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Playlist(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Playlist> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = "isStringConstant";
            isNameExpr = isIntegerConstant;
            isNameExpr = true;
            isNameExpr = true;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new Playlist(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestPlaylistsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestPlaylists isVariable;

        public static RequestPlaylists isMethod() {
            return isNameExpr;
        }

        public RequestPlaylists isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestPlaylists> isVariable = new com.google.protobuf.AbstractParser<RequestPlaylists>() {

            public RequestPlaylists isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestPlaylists(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestPlaylists> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = true;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestPlaylists(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestPlaylistSongsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestPlaylistSongs isVariable;

        public static RequestPlaylistSongs isMethod() {
            return isNameExpr;
        }

        public RequestPlaylistSongs isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestPlaylistSongs> isVariable = new com.google.protobuf.AbstractParser<RequestPlaylistSongs>() {

            public RequestPlaylistSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestPlaylistSongs(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestPlaylistSongs> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestPlaylistSongs(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestChangeSongOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestChangeSong isVariable;

        public static RequestChangeSong isMethod() {
            return isNameExpr;
        }

        public RequestChangeSong isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestChangeSong> isVariable = new com.google.protobuf.AbstractParser<RequestChangeSong>() {

            public RequestChangeSong isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestChangeSong(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestChangeSong> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSongOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestChangeSong(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestSetVolumeOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestSetVolume isVariable;

        public static RequestSetVolume isMethod() {
            return isNameExpr;
        }

        public RequestSetVolume isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestSetVolume> isVariable = new com.google.protobuf.AbstractParser<RequestSetVolume>() {

            public RequestSetVolume isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestSetVolume(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestSetVolume> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolumeOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestSetVolume(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatMode isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RepeatOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final Repeat isVariable;

        public static Repeat isMethod() {
            return isNameExpr;
        }

        public Repeat isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatMode isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder.class);
        }

        public static com.google.protobuf.Parser<Repeat> isVariable = new com.google.protobuf.AbstractParser<Repeat>() {

            public Repeat isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Repeat(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Repeat> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatMode isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatMode isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatMode isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatMode isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatMode isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new Repeat(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleMode isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ShuffleOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final Shuffle isVariable;

        public static Shuffle isMethod() {
            return isNameExpr;
        }

        public Shuffle isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleMode isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder.class);
        }

        public static com.google.protobuf.Parser<Shuffle> isVariable = new com.google.protobuf.AbstractParser<Shuffle>() {

            public Shuffle isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Shuffle(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Shuffle> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleMode isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleMode isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleMode isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleMode isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleMode isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new Shuffle(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseClementineInfoOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseClementineInfo isVariable;

        public static ResponseClementineInfo isMethod() {
            return isNameExpr;
        }

        public ResponseClementineInfo isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseClementineInfo> isVariable = new com.google.protobuf.AbstractParser<ResponseClementineInfo>() {

            public ResponseClementineInfo isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseClementineInfo(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseClementineInfo> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = "isStringConstant";
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfoOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseClementineInfo(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseCurrentMetadataOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseCurrentMetadata isVariable;

        public static ResponseCurrentMetadata isMethod() {
            return isNameExpr;
        }

        public ResponseCurrentMetadata isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseCurrentMetadata> isVariable = new com.google.protobuf.AbstractParser<ResponseCurrentMetadata>() {

            public ResponseCurrentMetadata isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseCurrentMetadata(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseCurrentMetadata> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadataOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }
        }

        static {
            isNameExpr = new ResponseCurrentMetadata(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(int isParameter);

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder isMethod(int isParameter);
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponsePlaylistsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponsePlaylists isVariable;

        public static ResponsePlaylists isMethod() {
            return isNameExpr;
        }

        public ResponsePlaylists isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist>();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr));
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponsePlaylists> isVariable = new com.google.protobuf.AbstractParser<ResponsePlaylists>() {

            public ResponsePlaylists isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponsePlaylists(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponsePlaylists> isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist> isVariable;

        /**
         * isComment
         */
        public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists(this);
                int isVariable = isNameExpr;
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    }
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr == null) {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                        } else {
                            isMethod();
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                        isMethod();
                    }
                } else {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr.isMethod();
                            isNameExpr = null;
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr ? isMethod() : null;
                        } else {
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                    }
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist> isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist>(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder> isVariable;

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist> isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public int isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist> isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    super.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder> isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isMethod() {
                return isMethod().isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr, isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder> isMethod() {
                return isMethod().isMethod();
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder>(isNameExpr, ((isNameExpr & isIntegerConstant) == isIntegerConstant), isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }
        }

        static {
            isNameExpr = new ResponsePlaylists(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter);

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter);
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponsePlaylistSongsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponsePlaylistSongs isVariable;

        public static ResponsePlaylistSongs isMethod() {
            return isNameExpr;
        }

        public ResponsePlaylistSongs isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata>();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr));
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponsePlaylistSongs> isVariable = new com.google.protobuf.AbstractParser<ResponsePlaylistSongs>() {

            public ResponsePlaylistSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponsePlaylistSongs(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponsePlaylistSongs> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isVariable;

        /**
         * isComment
         */
        public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    }
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr == null) {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                        } else {
                            isMethod();
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                        isMethod();
                    }
                } else {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr.isMethod();
                            isNameExpr = null;
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr ? isMethod() : null;
                        } else {
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                    }
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Playlist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.PlaylistOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata>(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isVariable;

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public int isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    super.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod() {
                return isMethod().isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr, isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder> isMethod() {
                return isMethod().isMethod();
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder>(isNameExpr, ((isNameExpr & isIntegerConstant) == isIntegerConstant), isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }
        }

        static {
            isNameExpr = new ResponsePlaylistSongs(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseEngineStateChangedOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseEngineStateChanged isVariable;

        public static ResponseEngineStateChanged isMethod() {
            return isNameExpr;
        }

        public ResponseEngineStateChanged isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseEngineStateChanged> isVariable = new com.google.protobuf.AbstractParser<ResponseEngineStateChanged>() {

            public ResponseEngineStateChanged isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseEngineStateChanged(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseEngineStateChanged> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChangedOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.EngineState isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseEngineStateChanged(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseUpdateTrackPositionOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseUpdateTrackPosition isVariable;

        public static ResponseUpdateTrackPosition isMethod() {
            return isNameExpr;
        }

        public ResponseUpdateTrackPosition isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseUpdateTrackPosition> isVariable = new com.google.protobuf.AbstractParser<ResponseUpdateTrackPosition>() {

            public ResponseUpdateTrackPosition isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseUpdateTrackPosition(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseUpdateTrackPosition> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPositionOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseUpdateTrackPosition(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestConnectOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestConnect isVariable;

        public static RequestConnect isMethod() {
            return isNameExpr;
        }

        public RequestConnect isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestConnect> isVariable = new com.google.protobuf.AbstractParser<RequestConnect>() {

            public RequestConnect isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestConnect(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestConnect> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = true;
            isNameExpr = true;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnectOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestConnect(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ReasonDisconnect isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseDisconnectOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseDisconnect isVariable;

        public static ResponseDisconnect isMethod() {
            return isNameExpr;
        }

        public ResponseDisconnect isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ReasonDisconnect isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseDisconnect> isVariable = new com.google.protobuf.AbstractParser<ResponseDisconnect>() {

            public ResponseDisconnect isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseDisconnect(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseDisconnect> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ReasonDisconnect isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ReasonDisconnect isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnectOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ReasonDisconnect isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ReasonDisconnect isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ReasonDisconnect isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseDisconnect(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseActiveChangedOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseActiveChanged isVariable;

        public static ResponseActiveChanged isMethod() {
            return isNameExpr;
        }

        public ResponseActiveChanged isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseActiveChanged> isVariable = new com.google.protobuf.AbstractParser<ResponseActiveChanged>() {

            public ResponseActiveChanged isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseActiveChanged(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseActiveChanged> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChangedOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseActiveChanged(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestSetTrackPositionOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestSetTrackPosition isVariable;

        public static RequestSetTrackPosition isMethod() {
            return isNameExpr;
        }

        public RequestSetTrackPosition isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestSetTrackPosition> isVariable = new com.google.protobuf.AbstractParser<RequestSetTrackPosition>() {

            public RequestSetTrackPosition isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestSetTrackPosition(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestSetTrackPosition> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPositionOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestSetTrackPosition(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        java.util.List<java.lang.String> isMethod();

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod(int isParameter);

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod(int isParameter);

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();

        // isComment
        /**
         * isComment
         */
        java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter);

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter);
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestInsertUrlsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestInsertUrls isVariable;

        public static RequestInsertUrls isMethod() {
            return isNameExpr;
        }

        public RequestInsertUrls isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new com.google.protobuf.LazyStringArrayList();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod());
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata>();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr));
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new com.google.protobuf.UnmodifiableLazyStringList(isNameExpr);
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestInsertUrls> isVariable = new com.google.protobuf.AbstractParser<RequestInsertUrls>() {

            public RequestInsertUrls isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestInsertUrls(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestInsertUrls> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.LazyStringList isVariable;

        /**
         * isComment
         */
        public java.util.List<java.lang.String> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public java.lang.String isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isVariable;

        /**
         * isComment
         */
        public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            isNameExpr = -isIntegerConstant;
            isNameExpr = true;
            isNameExpr = true;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            {
                int isVariable = isIntegerConstant;
                for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                    isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr.isMethod(isNameExpr));
                }
                isNameExpr += isNameExpr;
                isNameExpr += isIntegerConstant * isMethod().isMethod();
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrlsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = -isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new com.google.protobuf.UnmodifiableLazyStringList(isNameExpr);
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    }
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                    if (isNameExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr;
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    } else {
                        isMethod();
                        isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                    }
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr == null) {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                        } else {
                            isMethod();
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                        isMethod();
                    }
                } else {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr.isMethod();
                            isNameExpr = null;
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr ? isMethod() : null;
                        } else {
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                    }
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private com.google.protobuf.LazyStringList isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new com.google.protobuf.LazyStringArrayList(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            /**
             * isComment
             */
            public java.util.List<java.lang.String> isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr.isMethod();
            }

            /**
             * isComment
             */
            public java.lang.String isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isMethod();
                isNameExpr.isMethod(isNameExpr, isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isMethod();
                isNameExpr.isMethod(isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<java.lang.String> isParameter) {
                isMethod();
                super.isMethod(isNameExpr, isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isMethod();
                isNameExpr.isMethod(isNameExpr);
                isMethod();
                return this;
            }

            // isComment
            private int isVariable = -isIntegerConstant;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = -isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }

            // isComment
            private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata>(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isVariable;

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public int isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    super.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod() {
                return isMethod().isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr, isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder> isMethod() {
                return isMethod().isMethod();
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder>(isNameExpr, ((isNameExpr & isIntegerConstant) == isIntegerConstant), isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }
        }

        static {
            isNameExpr = new RequestInsertUrls(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        java.util.List<java.lang.Integer> isMethod();

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        int isMethod(int isParameter);
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestRemoveSongsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestRemoveSongs isVariable;

        public static RequestRemoveSongs isMethod() {
            return isNameExpr;
        }

        public RequestRemoveSongs isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new java.util.ArrayList<java.lang.Integer>();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod());
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                int isVariable = isNameExpr.isMethod(isNameExpr);
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr.isMethod() > isIntegerConstant) {
                                    isNameExpr = new java.util.ArrayList<java.lang.Integer>();
                                    isNameExpr |= isIntegerConstant;
                                }
                                while (isNameExpr.isMethod() > isIntegerConstant) {
                                    isNameExpr.isMethod(isNameExpr.isMethod());
                                }
                                isNameExpr.isMethod(isNameExpr);
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestRemoveSongs> isVariable = new com.google.protobuf.AbstractParser<RequestRemoveSongs>() {

            public RequestRemoveSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestRemoveSongs(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestRemoveSongs> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.util.List<java.lang.Integer> isVariable;

        /**
         * isComment
         */
        public java.util.List<java.lang.Integer> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public int isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            {
                int isVariable = isIntegerConstant;
                for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                    isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr.isMethod(isNameExpr));
                }
                isNameExpr += isNameExpr;
                isNameExpr += isIntegerConstant * isMethod().isMethod();
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                    if (isNameExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr;
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    } else {
                        isMethod();
                        isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                    }
                    isMethod();
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.util.List<java.lang.Integer> isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new java.util.ArrayList<java.lang.Integer>(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            /**
             * isComment
             */
            public java.util.List<java.lang.Integer> isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr.isMethod();
            }

            /**
             * isComment
             */
            public int isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, int isParameter) {
                isMethod();
                isNameExpr.isMethod(isNameExpr, isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isMethod();
                isNameExpr.isMethod(isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<? extends java.lang.Integer> isParameter) {
                isMethod();
                super.isMethod(isNameExpr, isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestRemoveSongs(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestOpenPlaylistOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestOpenPlaylist isVariable;

        public static RequestOpenPlaylist isMethod() {
            return isNameExpr;
        }

        public RequestOpenPlaylist isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestOpenPlaylist> isVariable = new com.google.protobuf.AbstractParser<RequestOpenPlaylist>() {

            public RequestOpenPlaylist isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestOpenPlaylist(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestOpenPlaylist> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylistOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestOpenPlaylist(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestClosePlaylistOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestClosePlaylist isVariable;

        public static RequestClosePlaylist isMethod() {
            return isNameExpr;
        }

        public RequestClosePlaylist isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestClosePlaylist> isVariable = new com.google.protobuf.AbstractParser<RequestClosePlaylist>() {

            public RequestClosePlaylist isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestClosePlaylist(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestClosePlaylist> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylistOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestClosePlaylist(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(int isParameter);

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder isMethod(int isParameter);
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseLyricsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseLyrics isVariable;

        public static ResponseLyrics isMethod() {
            return isNameExpr;
        }

        public ResponseLyrics isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric>();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr));
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseLyrics> isVariable = new com.google.protobuf.AbstractParser<ResponseLyrics>() {

            public ResponseLyrics isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseLyrics(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseLyrics> isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric> isVariable;

        /**
         * isComment
         */
        public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyricsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics(this);
                int isVariable = isNameExpr;
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    }
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr == null) {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                        } else {
                            isMethod();
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                        isMethod();
                    }
                } else {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr.isMethod();
                            isNameExpr = null;
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr ? isMethod() : null;
                        } else {
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                    }
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric> isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric>(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder> isVariable;

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric> isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public int isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric> isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    super.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder> isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder isMethod() {
                return isMethod().isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr, isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder> isMethod() {
                return isMethod().isMethod();
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder>(isNameExpr, ((isNameExpr & isIntegerConstant) == isIntegerConstant), isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }
        }

        static {
            isNameExpr = new ResponseLyrics(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements LyricOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final Lyric isVariable;

        public static Lyric isMethod() {
            return isNameExpr;
        }

        public Lyric isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder.class);
        }

        public static com.google.protobuf.Parser<Lyric> isVariable = new com.google.protobuf.AbstractParser<Lyric>() {

            public Lyric isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Lyric(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Lyric> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        private void isMethod() {
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.LyricOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Lyric) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new Lyric(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.DownloadItem isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        java.util.List<java.lang.String> isMethod();

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod(int isParameter);

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod(int isParameter);
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestDownloadSongsOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestDownloadSongs isVariable;

        public static RequestDownloadSongs isMethod() {
            return isNameExpr;
        }

        public RequestDownloadSongs isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.DownloadItem isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new com.google.protobuf.LazyStringArrayList();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod());
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new com.google.protobuf.UnmodifiableLazyStringList(isNameExpr);
                }
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestDownloadSongs> isVariable = new com.google.protobuf.AbstractParser<RequestDownloadSongs>() {

            public RequestDownloadSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestDownloadSongs(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestDownloadSongs> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.DownloadItem isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.DownloadItem isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.LazyStringList isVariable;

        /**
         * isComment
         */
        public java.util.List<java.lang.String> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public java.lang.String isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        private void isMethod() {
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            {
                int isVariable = isIntegerConstant;
                for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                    isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr.isMethod(isNameExpr));
                }
                isNameExpr += isNameExpr;
                isNameExpr += isIntegerConstant * isMethod().isMethod();
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongsOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new com.google.protobuf.UnmodifiableLazyStringList(isNameExpr);
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                    if (isNameExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr;
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    } else {
                        isMethod();
                        isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                    }
                    isMethod();
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.DownloadItem isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.DownloadItem isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.DownloadItem isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private com.google.protobuf.LazyStringList isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new com.google.protobuf.LazyStringArrayList(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            /**
             * isComment
             */
            public java.util.List<java.lang.String> isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr.isMethod();
            }

            /**
             * isComment
             */
            public java.lang.String isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod(int isParameter) {
                return isNameExpr.isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isMethod();
                isNameExpr.isMethod(isNameExpr, isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isMethod();
                isNameExpr.isMethod(isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<java.lang.String> isParameter) {
                isMethod();
                super.isMethod(isNameExpr, isNameExpr);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isMethod();
                isNameExpr.isMethod(isNameExpr);
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestDownloadSongs(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseSongFileChunkOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseSongFileChunk isVariable;

        public static ResponseSongFileChunk isMethod() {
            return isNameExpr;
        }

        public ResponseSongFileChunk isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseSongFileChunk> isVariable = new com.google.protobuf.AbstractParser<ResponseSongFileChunk>() {

            public ResponseSongFileChunk isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseSongFileChunk(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseSongFileChunk> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.ByteString isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.ByteString isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunkOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseSongFileChunk(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseLibraryChunkOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseLibraryChunk isVariable;

        public static ResponseLibraryChunk isMethod() {
            return isNameExpr;
        }

        public ResponseLibraryChunk isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseLibraryChunk> isVariable = new com.google.protobuf.AbstractParser<ResponseLibraryChunk>() {

            public ResponseLibraryChunk isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseLibraryChunk(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseLibraryChunk> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.ByteString isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.ByteString isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunkOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseLibraryChunk(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        boolean isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseSongOfferOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseSongOffer isVariable;

        public static ResponseSongOffer isMethod() {
            return isNameExpr;
        }

        public ResponseSongOffer isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseSongOffer> isVariable = new com.google.protobuf.AbstractParser<ResponseSongOffer>() {

            public ResponseSongOffer isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseSongOffer(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseSongOffer> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private boolean isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public boolean isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = true;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOfferOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = true;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private boolean isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public boolean isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(boolean isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = true;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseSongOffer(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        float isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestRateSongOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestRateSong isVariable;

        public static RequestRateSong isMethod() {
            return isNameExpr;
        }

        public RequestRateSong isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestRateSong> isVariable = new com.google.protobuf.AbstractParser<RequestRateSong>() {

            public RequestRateSong isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestRateSong(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestRateSong> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private float isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public float isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isDoubleConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSongOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isDoubleConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private float isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public float isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(float isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isDoubleConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestRateSong(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseDownloadTotalSizeOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseDownloadTotalSize isVariable;

        public static ResponseDownloadTotalSize isMethod() {
            return isNameExpr;
        }

        public ResponseDownloadTotalSize isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseDownloadTotalSize> isVariable = new com.google.protobuf.AbstractParser<ResponseDownloadTotalSize>() {

            public ResponseDownloadTotalSize isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseDownloadTotalSize(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseDownloadTotalSize> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSizeOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseDownloadTotalSize(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements RequestGlobalSearchOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final RequestGlobalSearch isVariable;

        public static RequestGlobalSearch isMethod() {
            return isNameExpr;
        }

        public RequestGlobalSearch isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder.class);
        }

        public static com.google.protobuf.Parser<RequestGlobalSearch> isVariable = new com.google.protobuf.AbstractParser<RequestGlobalSearch>() {

            public RequestGlobalSearch isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestGlobalSearch(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<RequestGlobalSearch> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        private void isMethod() {
            isNameExpr = "isStringConstant";
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearchOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new RequestGlobalSearch(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter);

        /**
         * isComment
         */
        int isMethod();

        /**
         * isComment
         */
        java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter);

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseGlobalSearchOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseGlobalSearch isVariable;

        public static ResponseGlobalSearch isMethod() {
            return isNameExpr;
        }

        public ResponseGlobalSearch isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata>();
                                    isNameExpr |= isIntegerConstant;
                                }
                                isNameExpr.isMethod(isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr));
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseGlobalSearch> isVariable = new com.google.protobuf.AbstractParser<ResponseGlobalSearch>() {

            public ResponseGlobalSearch isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseGlobalSearch(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseGlobalSearch> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isVariable;

        /**
         * isComment
         */
        public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr.isMethod();
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter) {
            return isNameExpr.isMethod(isNameExpr);
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private com.google.protobuf.ByteString isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = "isStringConstant";
            isNameExpr = "isStringConstant";
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            for (int isVariable = isIntegerConstant; isNameExpr < isNameExpr.isMethod(); isNameExpr++) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod(isNameExpr));
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                        isNameExpr = (isNameExpr & ~isIntegerConstant);
                    }
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr == null) {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                        } else {
                            isMethod();
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                        isMethod();
                    }
                } else {
                    if (!isNameExpr.isFieldAccessExpr.isMethod()) {
                        if (isNameExpr.isMethod()) {
                            isNameExpr.isMethod();
                            isNameExpr = null;
                            isNameExpr = isNameExpr.isFieldAccessExpr;
                            isNameExpr = (isNameExpr & ~isIntegerConstant);
                            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr ? isMethod() : null;
                        } else {
                            isNameExpr.isMethod(isNameExpr.isFieldAccessExpr);
                        }
                    }
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private void isMethod() {
                if (!((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr = new java.util.ArrayList<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata>(isNameExpr);
                    isNameExpr |= isIntegerConstant;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isVariable;

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public int isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr, isNameExpr.isMethod());
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.Iterable<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata> isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    super.isMethod(isNameExpr, isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isNameExpr = (isNameExpr & ~isIntegerConstant);
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    isMethod();
                    isNameExpr.isMethod(isNameExpr);
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder isMethod(int isParameter) {
                if (isNameExpr == null) {
                    return isNameExpr.isMethod(isNameExpr);
                } else {
                    return isNameExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public java.util.List<? extends de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                }
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod() {
                return isMethod().isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder isMethod(int isParameter) {
                return isMethod().isMethod(isNameExpr, isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod());
            }

            /**
             * isComment
             */
            public java.util.List<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder> isMethod() {
                return isMethod().isMethod();
            }

            private com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.RepeatedFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.SongMetadataOrBuilder>(isNameExpr, ((isNameExpr & isIntegerConstant) == isIntegerConstant), isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseGlobalSearch(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseTranscoderStatusOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseTranscoderStatus isVariable;

        public static ResponseTranscoderStatus isMethod() {
            return isNameExpr;
        }

        public ResponseTranscoderStatus isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseTranscoderStatus> isVariable = new com.google.protobuf.AbstractParser<ResponseTranscoderStatus>() {

            public ResponseTranscoderStatus isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseTranscoderStatus(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseTranscoderStatus> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isIntegerConstant;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatusOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseTranscoderStatus(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        java.lang.String isMethod();

        /**
         * isComment
         */
        com.google.protobuf.ByteString isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.GlobalSearchStatus isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements ResponseGlobalSearchStatusOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final ResponseGlobalSearchStatus isVariable;

        public static ResponseGlobalSearchStatus isMethod() {
            return isNameExpr;
        }

        public ResponseGlobalSearchStatus isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.GlobalSearchStatus isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder.class);
        }

        public static com.google.protobuf.Parser<ResponseGlobalSearchStatus> isVariable = new com.google.protobuf.AbstractParser<ResponseGlobalSearchStatus>() {

            public ResponseGlobalSearchStatus isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResponseGlobalSearchStatus(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ResponseGlobalSearchStatus> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private java.lang.Object isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public java.lang.String isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                return (java.lang.String) isNameExpr;
            } else {
                com.google.protobuf.ByteString isVariable = (com.google.protobuf.ByteString) isNameExpr;
                java.lang.String isVariable = isNameExpr.isMethod();
                if (isNameExpr.isMethod()) {
                    isNameExpr = isNameExpr;
                }
                return isNameExpr;
            }
        }

        /**
         * isComment
         */
        public com.google.protobuf.ByteString isMethod() {
            java.lang.Object isVariable = isNameExpr;
            if (isNameExpr instanceof java.lang.String) {
                com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                isNameExpr = isNameExpr;
                return isNameExpr;
            } else {
                return (com.google.protobuf.ByteString) isNameExpr;
            }
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.GlobalSearchStatus isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.GlobalSearchStatus isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = "isStringConstant";
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatusOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = "isStringConstant";
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus(this);
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isNameExpr |= isIntegerConstant;
                    isNameExpr = isNameExpr.isFieldAccessExpr;
                    isMethod();
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            // isComment
            private int isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private java.lang.Object isVariable = "isStringConstant";

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public java.lang.String isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (!(isNameExpr instanceof java.lang.String)) {
                    java.lang.String isVariable = ((com.google.protobuf.ByteString) isNameExpr).isMethod();
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (java.lang.String) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public com.google.protobuf.ByteString isMethod() {
                java.lang.Object isVariable = isNameExpr;
                if (isNameExpr instanceof String) {
                    com.google.protobuf.ByteString isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod((java.lang.String) isNameExpr);
                    isNameExpr = isNameExpr;
                    return isNameExpr;
                } else {
                    return (com.google.protobuf.ByteString) isNameExpr;
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(java.lang.String isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isMethod().isMethod();
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(com.google.protobuf.ByteString isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.GlobalSearchStatus isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.GlobalSearchStatus isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.GlobalSearchStatus isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }
        }

        static {
            isNameExpr = new ResponseGlobalSearchStatus(true);
            isNameExpr.isMethod();
        }
    }

    public interface isClassOrIsInterface extends com.google.protobuf.MessageOrBuilder {

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        int isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MsgType isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnectOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSongOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolumeOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPositionOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrlsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylistOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylistOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSongOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearchOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfoOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadataOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChangedOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPositionOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnectOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChangedOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyricsOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunkOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOfferOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunkOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSizeOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatusOrBuilder isMethod();

        // isComment
        /**
         * isComment
         */
        boolean isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod();

        /**
         * isComment
         */
        de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatusOrBuilder isMethod();
    }

    /**
     * isComment
     */
    public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage implements MessageOrBuilder {

        // isComment
        private isConstructor(com.google.protobuf.GeneratedMessage.Builder<?> isParameter) {
            super(isNameExpr);
            this.isFieldAccessExpr = isNameExpr.isMethod();
        }

        private isConstructor(boolean isParameter) {
            this.isFieldAccessExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private static final Message isVariable;

        public static Message isMethod() {
            return isNameExpr;
        }

        public Message isMethod() {
            return isNameExpr;
        }

        private final com.google.protobuf.UnknownFieldSet isVariable;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet isMethod() {
            return this.isFieldAccessExpr;
        }

        private isConstructor(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            isMethod();
            int isVariable = isIntegerConstant;
            int isVariable = isIntegerConstant;
            com.google.protobuf.UnknownFieldSet.Builder isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            try {
                boolean isVariable = true;
                while (!isNameExpr) {
                    int isVariable = isNameExpr.isMethod();
                    switch(isNameExpr) {
                        case isIntegerConstant:
                            isNameExpr = true;
                            break;
                        default:
                            {
                                if (!isMethod(isNameExpr, isNameExpr, isNameExpr, isNameExpr)) {
                                    isNameExpr = true;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                isNameExpr |= isIntegerConstant;
                                isNameExpr = isNameExpr.isMethod();
                                break;
                            }
                        case isIntegerConstant:
                            {
                                int isVariable = isNameExpr.isMethod();
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MsgType isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr);
                                if (isNameExpr == null) {
                                    isNameExpr.isMethod(isIntegerConstant, isNameExpr);
                                } else {
                                    isNameExpr |= isIntegerConstant;
                                    isNameExpr = isNameExpr;
                                }
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                        case isIntegerConstant:
                            {
                                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder isVariable = null;
                                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr = isNameExpr.isMethod(isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr, isNameExpr);
                                if (isNameExpr != null) {
                                    isNameExpr.isMethod(isNameExpr);
                                    isNameExpr = isNameExpr.isMethod();
                                }
                                isNameExpr |= isIntegerConstant;
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                throw isNameExpr.isMethod(this);
            } catch (java.io.IOException isParameter) {
                throw new com.google.protobuf.InvalidProtocolBufferException(isNameExpr.isMethod()).isMethod(this);
            } finally {
                this.isFieldAccessExpr = isNameExpr.isMethod();
                isMethod();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
            return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message.Builder.class);
        }

        public static com.google.protobuf.Parser<Message> isVariable = new com.google.protobuf.AbstractParser<Message>() {

            public Message isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Message(isNameExpr, isNameExpr);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Message> isMethod() {
            return isNameExpr;
        }

        private int isVariable;

        private int isVariable;

        // isComment
        public static final int isVariable = isIntegerConstant;

        private int isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public int isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MsgType isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MsgType isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnectOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSongOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolumeOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPositionOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrlsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylistOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylistOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSongOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearchOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfoOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadataOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChangedOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPositionOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnectOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChangedOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyricsOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunkOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOfferOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunkOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSizeOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatusOrBuilder isMethod() {
            return isNameExpr;
        }

        // isComment
        public static final int isVariable = isIntegerConstant;

        private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isVariable;

        /**
         * isComment
         */
        public boolean isMethod() {
            return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod() {
            return isNameExpr;
        }

        /**
         * isComment
         */
        public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatusOrBuilder isMethod() {
            return isNameExpr;
        }

        private void isMethod() {
            isNameExpr = isIntegerConstant;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
        }

        private byte isVariable = -isIntegerConstant;

        public final boolean isMethod() {
            byte isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr == isIntegerConstant;
            isNameExpr = isIntegerConstant;
            return true;
        }

        public void isMethod(com.google.protobuf.CodedOutputStream isParameter) throws java.io.IOException {
            isMethod();
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isMethod().isMethod(isNameExpr);
        }

        private int isVariable = -isIntegerConstant;

        public int isMethod() {
            int isVariable = isNameExpr;
            if (isNameExpr != -isIntegerConstant)
                return isNameExpr;
            isNameExpr = isIntegerConstant;
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr.isMethod());
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                isNameExpr += isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isIntegerConstant, isNameExpr);
            }
            isNameExpr += isMethod().isMethod();
            isNameExpr = isNameExpr;
            return isNameExpr;
        }

        private static final long isVariable = isStringConstant;

        @java.lang.Override
        protected java.lang.Object isMethod() throws java.io.ObjectStreamException {
            return super.isMethod();
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(com.google.protobuf.ByteString isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(com.google.protobuf.ByteString isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(byte[] isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(byte[] isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws com.google.protobuf.InvalidProtocolBufferException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(java.io.InputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(java.io.InputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(com.google.protobuf.CodedInputStream isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr);
        }

        public static de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
            return isNameExpr.isMethod(isNameExpr, isNameExpr);
        }

        public static Builder isMethod() {
            return isNameExpr.isMethod();
        }

        public Builder isMethod() {
            return isMethod();
        }

        public static Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isParameter) {
            return isMethod().isMethod(isNameExpr);
        }

        public Builder isMethod() {
            return isMethod(this);
        }

        @java.lang.Override
        protected Builder isMethod(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
            Builder isVariable = new Builder(isNameExpr);
            return isNameExpr;
        }

        /**
         * isComment
         */
        public static final class isClassOrIsInterface extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MessageOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message.class, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message.Builder.class);
            }

            // isComment
            private isConstructor() {
                isMethod();
            }

            private isConstructor(com.google.protobuf.GeneratedMessage.BuilderParent isParameter) {
                super(isNameExpr);
                isMethod();
            }

            private void isMethod() {
                if (isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr) {
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                    isMethod();
                }
            }

            private static Builder isMethod() {
                return new Builder();
            }

            public Builder isMethod() {
                super.isMethod();
                isNameExpr = isIntegerConstant;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            public Builder isMethod() {
                return isMethod().isMethod(isMethod());
            }

            public com.google.protobuf.Descriptors.Descriptor isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod() {
                return isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isVariable = isMethod();
                if (!isNameExpr.isMethod()) {
                    throw isMethod(isNameExpr);
                }
                return isNameExpr;
            }

            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isMethod() {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isVariable = new de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message(this);
                int isVariable = isNameExpr;
                int isVariable = isNameExpr;
                int isVariable = isIntegerConstant;
                int isVariable = isIntegerConstant;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                if (((isNameExpr & isIntegerConstant) == isIntegerConstant)) {
                    isNameExpr |= isIntegerConstant;
                }
                if (isNameExpr == null) {
                    isNameExpr.isFieldAccessExpr = isNameExpr;
                } else {
                    isNameExpr.isFieldAccessExpr = isNameExpr.isMethod();
                }
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isNameExpr.isFieldAccessExpr = isNameExpr;
                isMethod();
                return isNameExpr;
            }

            public Builder isMethod(com.google.protobuf.Message isParameter) {
                if (isNameExpr instanceof de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message) {
                    return isMethod((de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message) isNameExpr);
                } else {
                    super.isMethod(isNameExpr);
                    return this;
                }
            }

            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isParameter) {
                if (isNameExpr == isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod())
                    return this;
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                if (isNameExpr.isMethod()) {
                    isMethod(isNameExpr.isMethod());
                }
                this.isMethod(isNameExpr.isMethod());
                return this;
            }

            public final boolean isMethod() {
                return true;
            }

            public Builder isMethod(com.google.protobuf.CodedInputStream isParameter, com.google.protobuf.ExtensionRegistryLite isParameter) throws java.io.IOException {
                de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message isVariable = null;
                try {
                    isNameExpr = isNameExpr.isMethod(isNameExpr, isNameExpr);
                } catch (com.google.protobuf.InvalidProtocolBufferException isParameter) {
                    isNameExpr = (de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Message) isNameExpr.isMethod();
                    throw isNameExpr;
                } finally {
                    if (isNameExpr != null) {
                        isMethod(isNameExpr);
                    }
                }
                return this;
            }

            private int isVariable;

            private int isVariable;

            // isComment
            private int isVariable = isIntegerConstant;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public int isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(int isParameter) {
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isIntegerConstant;
                isMethod();
                return this;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MsgType isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MsgType isMethod() {
                return isNameExpr;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.MsgType isParameter) {
                if (isNameExpr == null) {
                    throw new NullPointerException();
                }
                isNameExpr |= isIntegerConstant;
                isNameExpr = isNameExpr;
                isMethod();
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr;
                isMethod();
                return this;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnectOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnectOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnectOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnect.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestConnectOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylists.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestPlaylistSongsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSongOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSongOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSongOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSong.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestChangeSongOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolumeOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolumeOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolumeOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolume.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetVolumeOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPositionOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPositionOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPositionOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPosition.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestSetTrackPositionOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrlsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrlsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrlsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrls.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestInsertUrlsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRemoveSongsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylistOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylistOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylistOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestOpenPlaylistOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylistOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylistOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylistOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylist.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestClosePlaylistOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestDownloadSongsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSongOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSongOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSongOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSong.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestRateSongOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearchOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearchOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearchOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearch.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RequestGlobalSearchOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Repeat.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.RepeatOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.Shuffle.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ShuffleOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfoOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfoOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfoOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfo.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseClementineInfoOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadataOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadataOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadataOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadata.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseCurrentMetadataOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylists.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongs.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponsePlaylistSongsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChangedOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChangedOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChangedOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChanged.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseEngineStateChangedOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPositionOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPositionOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPositionOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPosition.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseUpdateTrackPositionOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnectOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnectOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnectOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnect.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDisconnectOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChangedOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChangedOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChangedOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChanged.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseActiveChangedOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyricsOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyricsOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyricsOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyrics.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLyricsOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunkOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunkOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunkOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunk.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongFileChunkOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOfferOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOfferOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOfferOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOffer.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseSongOfferOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunkOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunkOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunkOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunk.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseLibraryChunkOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSizeOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSizeOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSizeOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSize.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseDownloadTotalSizeOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearch.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatusOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatusOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatusOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatus.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseTranscoderStatusOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }

            // isComment
            private de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isVariable = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();

            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatusOrBuilder> isVariable;

            /**
             * isComment
             */
            public boolean isMethod() {
                return ((isNameExpr & isIntegerConstant) == isIntegerConstant);
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isMethod() {
                if (isNameExpr == null) {
                    return isNameExpr;
                } else {
                    return isNameExpr.isMethod();
                }
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isParameter) {
                if (isNameExpr == null) {
                    if (isNameExpr == null) {
                        throw new NullPointerException();
                    }
                    isNameExpr = isNameExpr;
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder isParameter) {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr.isMethod());
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod(de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus isParameter) {
                if (isNameExpr == null) {
                    if (((isNameExpr & isIntegerConstant) == isIntegerConstant) && isNameExpr != isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod()) {
                        isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr).isMethod(isNameExpr).isMethod();
                    } else {
                        isNameExpr = isNameExpr;
                    }
                    isMethod();
                } else {
                    isNameExpr.isMethod(isNameExpr);
                }
                isNameExpr |= isIntegerConstant;
                return this;
            }

            /**
             * isComment
             */
            public Builder isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod();
                    isMethod();
                } else {
                    isNameExpr.isMethod();
                }
                isNameExpr = (isNameExpr & ~isIntegerConstant);
                return this;
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder isMethod() {
                isNameExpr |= isIntegerConstant;
                isMethod();
                return isMethod().isMethod();
            }

            /**
             * isComment
             */
            public de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatusOrBuilder isMethod() {
                if (isNameExpr != null) {
                    return isNameExpr.isMethod();
                } else {
                    return isNameExpr;
                }
            }

            /**
             * isComment
             */
            private com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatusOrBuilder> isMethod() {
                if (isNameExpr == null) {
                    isNameExpr = new com.google.protobuf.SingleFieldBuilder<de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatus.Builder, de.qspool.clementineremote.backend.pb.ClementineRemoteProtocolBuffer.ResponseGlobalSearchStatusOrBuilder>(isNameExpr, isMethod(), isMethod());
                    isNameExpr = null;
                }
                return isNameExpr;
            }
        }

        static {
            isNameExpr = new Message(true);
            isNameExpr.isMethod();
        }
    }

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    private static com.google.protobuf.Descriptors.Descriptor isVariable;

    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable isVariable;

    public static com.google.protobuf.Descriptors.FileDescriptor isMethod() {
        return isNameExpr;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor isVariable;

    static {
        java.lang.String[] isVariable = { "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant", "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" + "isStringConstant" };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner isVariable = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {

            public com.google.protobuf.ExtensionRegistry isMethod(com.google.protobuf.Descriptors.FileDescriptor isParameter) {
                isNameExpr = isNameExpr;
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant" });
                isNameExpr = isMethod().isMethod().isMethod(isIntegerConstant);
                isNameExpr = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(isNameExpr, new java.lang.String[] { "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant", "isStringConstant" });
                return null;
            }
        };
        isNameExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isFieldAccessExpr.isMethod(isNameExpr, new com.google.protobuf.Descriptors.FileDescriptor[] {}, isNameExpr);
    }
}
